{"ast":null,"code":"var _jsxFileName = \"/Users/oreoluwacollins/Documents/GitHub/Campus-test/frontend/src/components/ViewReports.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport HeaderLogo from \"./HeaderLogo\";\nimport Report from \"./Report\";\nimport reportType from \"../functions/reportType\";\nimport NavMenu from \"./NavMenu\";\nimport Footer from \"./Footer\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { buildingNames } from \"../constants/BuildingNames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ViewReports() {\n  _s();\n  let initialBuilding = null;\n  const sortedNames = [\"All\"];\n  for (let i in buildingNames.sort()) {\n    sortedNames.push(buildingNames[i]);\n  }\n  if (sortedNames && sortedNames[0]) {\n    initialBuilding = sortedNames[0];\n  }\n  const [building, setBuilding] = useState(initialBuilding);\n  const [reports, setReports] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8081/reportByBuilding\", {\n      params: {\n        buildingName: building\n      }\n    }).then(res => {\n      const reports = res.data.map(value => {\n        return /*#__PURE__*/_jsxDEV(Report, {\n          id: value.Reportid,\n          reportTitle: value.ReportTitle,\n          reportDate: value.Date,\n          buildingName: value.BuildingName,\n          reportType: value.ReportType,\n          issueDetails: value.ReportNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this);\n      });\n      setReports(reports);\n    });\n  }, [building]);\n\n  // We'll probably end up returning an array of report rows \n  // and use .map() to generate an array of reports\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(NavMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          disablePortal: true,\n          onChange: e => {\n            setBuilding(e.target.outerText);\n          },\n          id: \"combo-box-demo\",\n          options: sortedNames,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 46\n          }, this),\n          value: building\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), reports, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(ViewReports, \"ZFkjeGtMTgW36tARmUhmO4mV8DQ=\");\n_c = ViewReports;\nvar _c;\n$RefreshReg$(_c, \"ViewReports\");","map":{"version":3,"names":["React","useEffect","useState","Button","axios","Link","Form","HeaderLogo","Report","reportType","NavMenu","Footer","Autocomplete","TextField","buildingNames","jsxDEV","_jsxDEV","ViewReports","_s","initialBuilding","sortedNames","i","sort","push","building","setBuilding","reports","setReports","get","params","buildingName","then","res","data","map","value","id","Reportid","reportTitle","ReportTitle","reportDate","Date","BuildingName","ReportType","issueDetails","ReportNote","fileName","_jsxFileName","lineNumber","columnNumber","children","disablePortal","onChange","e","target","outerText","options","renderInput","label","_c","$RefreshReg$"],"sources":["/Users/oreoluwacollins/Documents/GitHub/Campus-test/frontend/src/components/ViewReports.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport HeaderLogo from \"./HeaderLogo\";\nimport Report from \"./Report\";\nimport reportType from \"../functions/reportType\";\nimport NavMenu from \"./NavMenu\";\nimport Footer from \"./Footer\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport {buildingNames} from \"../constants/BuildingNames\";\n\n\nexport default function ViewReports() {\n\n    let initialBuilding = null;\n    const sortedNames = [\"All\"];\n    for (let i in buildingNames.sort()) {\n        sortedNames.push(buildingNames[i]);\n    }\n    if (sortedNames && sortedNames[0]) {\n        initialBuilding = sortedNames[0];\n    }\n    const [building, setBuilding] = useState(initialBuilding);\n    const [reports, setReports] = useState([])\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8081/reportByBuilding\", {params: {buildingName: building}})\n            .then((res) => {\n                const reports = res.data.map(((value) => {\n                    return (\n                        <Report id={value.Reportid} reportTitle={value.ReportTitle} reportDate={value.Date} buildingName={value.BuildingName} reportType={value.ReportType} issueDetails={value.ReportNote} />\n                    )\n                }))\n                setReports(reports)\n    })\n}, [building])\n\n    // We'll probably end up returning an array of report rows \n    // and use .map() to generate an array of reports\n    return (\n\n        <body>\n            <main>\n                <div>\n                    <NavMenu/>\n                    <h1>Reports</h1>\n                    <br />\n                    <br />\n                    <Autocomplete disablePortal\n                    onChange={(e) => { setBuilding(e.target.outerText) }}\n                    id=\"combo-box-demo\"\n                    options={sortedNames}\n                    renderInput={(params) => <TextField {...params} label=\"Building\"></TextField>}\n                    value= {building} \n                    />\n                    {reports}\n                    \n                    <br />                    \n                </div>\n            </main>\n            <Footer />\n        </body>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}